{"version":3,"sources":["components/Header/Header.js","components/Main/ToDoItem/ToDoItem.js","components/Main/AddNewTodo/AddNewTodo.js","components/Main/TaskStatus/TaskStatus.js","components/Main/ClearAllTodosButton/ClearAllTodosButton.js","components/Main/Main.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","ToDoItem","props","todos","map","todo","i","isCompleted","isImportant","title","tabindex","onClick","handleTodoIsChecked","onKeyDown","e","key","type","placeholder","value","content","onChange","handleTodoIsChanged","createTodoAtIndex","setTimeout","document","forms","elements","focus","handleTodoIsDeleted","length","handleKeyDown","handleTodoIsImportant","role","AddNewTodo","for","input","setInput","target","TaskStatus","pendingTodos","filter","completedTodos","allCompleted","Statusbar","styled","div","ClearAllTodosButton","setTodos","Main","useState","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","newTodos","splice","uuidv4","name","push","unshift","Footer","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.717f2723.chunk.js","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n      <header className=\"Header\">\n        <h1>What will you do today?</h1>\n      </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './ToDoItem.css';\n\nconst ToDoItem = (props) => {\n\n  const handleKeyDown = (e, i) => {\n    if (e.key === 'Enter' && props.todos[i].content !== '') { // sjekk om brukeren trykker \"enter\" i et gjÃ¸remÃ¥l med innhold\n      props.createTodoAtIndex(i); // kjÃ¸r funskjonen som oppretter et nytt gjÃ¸remÃ¥l\n      setTimeout(() => { \n        document.forms[0].elements[i + 1].focus(); // flytt fokus til linjen under\n      }, 0);\n    } else if (e.key === 'Backspace' && props.todos[i].content === '') { // sjekk om brukeren trykker \"backspace\" i et gjÃ¸remÃ¥l uten innhold\n      props.handleTodoIsDeleted(i); // kjÃ¸r funskjonen som sletter gjÃ¸remÃ¥let\n      setTimeout(() => { \n        (props.todos.length > 1) && document.forms[0].elements[i - 1].focus() // om det er flere enn ett item flytt fokus til linjen over\n      }, 0);\n    }\n  }\n\n  return (\n    props.todos.map((todo, i) => (\n\n      <li \n        key={todo.key}\n        // sett klasser om gjÃ¸remÃ¥let er markert som ferdig eller viktig\n        className={`\n          TodoItem \n          ${todo.isCompleted && 'TodoItem--isCompleted'} \n          ${todo.isImportant && 'TodoItem--isImportant'}\n      `}> \n\n        <checkbox\n          title=\"Mark as completed\"\n          tabindex=\"0\"\n          className='TodoItem__checkBox'\n          onClick={() => props.handleTodoIsChecked(i)}\n          onKeyDown={(e) => (e.key === 'Enter') && props.handleTodoIsChecked(i)} // brukere kan bruke tastaturet for Ã¥ merke gjÃ¸remÃ¥let\n        >\n          {todo.isCompleted && (<span>âœ“</span>)} \n        </checkbox>\n\n        <input\n          title=\"Text for to-do-item\"\n          type=\"text\"\n          placeholder=\"new to-do\"\n          value={todo.content}\n          onChange={e => props.handleTodoIsChanged(e, i)}\n          onKeyDown={e => handleKeyDown(e, i)}\n        />\n\n        <checkbox\n          title=\"Mark as important\"\n          tabindex=\"0\"\n          className='TodoItem__importantBtn'\n          onClick={() => props.handleTodoIsImportant(i)}\n          onKeyDown={(e) => (e.key === 'Enter') && props.handleTodoIsImportant(i)} // brukere kan bruke tastaturet for Ã¥ merke gjÃ¸remÃ¥let\n        >\n          <span>!</span>\n        </checkbox>\n\n        <div\n          title=\"Remove item\"\n          tabindex=\"0\"\n          role=\"button\"\n          className='TodoItem__removeBtn'\n          onClick={() => props.handleTodoIsDeleted(i)}\n          onKeyDown={(e) => (e.key === 'Enter') && props.handleTodoIsDeleted(i)} // brukere kan bruke tastaturet for Ã¥ slette gjÃ¸remÃ¥let\n        >\n          <span>âœ•</span>\n        </div>\n\n      </li>\n    ))\n  )\n}\n\nexport default ToDoItem","import React from 'react';\n\nconst AddNewTodo = (props) => {\n  return (\n    <div className=\"AddNewTodo\">\n      <input\n        title=\"Text for to-do-item\"\n        for=\"add-new-todo\"\n        placeholder=\"add new to-do\"\n        type=\"text\"\n        value={props.input} // dobbel-bind input til state\n        onChange={e => props.setInput(e.target.value)} // dobbel-bind input til state\n        onKeyDown={(e, i = -1) => e.key === 'Enter' && props.input ? props.createTodoAtIndex(i) : null} // send inn index som -1 for at den skal havne pÃ¥ 0\n      />\n      <button\n        type=\"submit\"\n        tabindex=\"0\"\n        className={'AddNewTodo__addBtn'}\n        onClick={props.input ? props.createTodoAtIndex : null}>\n          <span>ï¼‹</span>\n      </button>\n    </div>\n    )\n}\nexport default AddNewTodo","import React from 'react';\nimport styled from 'styled-components';\n\nconst TaskStatus = (props) => {\n\n  const pendingTodos = props.todos.filter(todo => todo.isCompleted === !true) // nytt array med alle ikke-completed items\n  const completedTodos = props.todos.filter(todo => todo.isCompleted === true) // nytt array med alle completed items\n  const allCompleted = pendingTodos.length === 0; // sann om alle gjÃ¸remÃ¥l er markert som ferdig\n\n  // test av styled components\n\n  const Statusbar = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-evenly;\n    margin: 1rem;\n    padding: 0.5em;\n    border: 2px solid ${!allCompleted ? \"rgb(226, 73, 55)\" : \"rgb(43, 164, 37)\"}; \n    border-radius: 0.5em;\n    width: 100%;\n    min-width: 330px;\n    max-width: 500px;\n  `;\n\n  return (\n    <Statusbar>\n      <div>{(allCompleted) ?  `All caught up ðŸ”¥` : `Pending: ${pendingTodos.length}`}</div>\n      <div>Completed: {completedTodos.length}</div>\n    </Statusbar>\n  )\n}\n\nexport default TaskStatus","import React from 'react'\nimport './ClearAllTodosButton.css'\n\nconst ClearAllTodosButton = (props) => {\n\n  const handleClearAll = () => props.setTodos([]); // erstatt todo-array i state med et tomt array\n\n  return (\n    <button className=\"ClearAllTodosButton\" onClick={ () => handleClearAll() }>\n        <span>Clear all</span>\n    </button>\n  );\n\n};\n\nexport default ClearAllTodosButton\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Main.css';\n\nimport ToDoItem from './ToDoItem/ToDoItem'\nimport AddNewTodo from './AddNewTodo/AddNewTodo'\nimport TaskStatus from './TaskStatus/TaskStatus'\nimport ClearAllTodosButton from './ClearAllTodosButton/ClearAllTodosButton'\n\nconst Main = () => {\n\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState([]);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"todo-list\");\n    data && setTodos(JSON.parse(data)); // om det er data i localstorage, settes todos-arrayet i state med denne dataen\n  }, []);\n  \n  useEffect(() => {\n    localStorage.setItem(\"todo-list\", JSON.stringify(todos));\n  }, [todos]); // oppdaterer localStorage nÃ¥r det skjer endringer i state\n\n  const createTodoAtIndex = (i) => {\n    const newTodos = [...todos]; // opprett et midlertidig array, en kopi av state\n    newTodos.splice(i + 1, 0, { // sett inn et nytt objekt pÃ¥ den aktuelle indeksen\n      key: uuidv4(), // et generert nummer, fra det importerte biblioteket uuidv4 (\"universally unique identifier\")\n      content: input ? input : '', // om det er innhold i input-feltet legges dette inn. ellers er dett en tom streng\n      isCompleted: false, // er gjÃ¸remÃ¥let markert som ferdig?\n      isImportant: false, // er gjÃ¸remÃ¥let markert som vitkig?\n    });\n    setTodos(newTodos); // sender det midlertidige arrayet inn og erstatter state\n    setInput(''); // input-feltet i toppen av siden tÃ¸mmes\n  };\n\n  const handleTodoIsDeleted = (i) => {\n    const newTodos = [...todos];\n    newTodos.splice(i, 1);\n    setTodos(newTodos);\n  }\n\n  const handleTodoIsChanged = (e, i) => {\n    const newTodos = [...todos];\n    newTodos[i].content = e.target.value; // endre innhold i todo-item ved Ã¥ redigere input-feltene\n    setTodos(newTodos);\n  }\n\n  const handleTodoIsChecked = (i) => {\n    const newTodos = [...todos];\n    newTodos[i].isCompleted = !newTodos[i].isCompleted; // toggle isCompleted\n    newTodos[i].isCompleted && newTodos.push(newTodos.splice(i, 1)[0]) // todo-item sendes til slutten av arrayet\n    setTodos(newTodos);\n  }\n\n  const handleTodoIsImportant = (i) => {\n    const newTodos = [...todos];\n    newTodos[i].isImportant = !newTodos[i].isImportant; // toggle isImportant\n    (newTodos[i].isImportant && !newTodos[i].isCompleted) && newTodos.unshift(newTodos.splice(i, 1)[0]) // todo-item sendes til starten av arrayet\n    setTodos(newTodos);\n  }\n\n  return (\n    <main className=\"Main\">\n      <div className=\"newTodoSection\" role=\"form\" name=\"add-new-todo\">\n        <AddNewTodo\n          todos={todos}\n          setTodos={setTodos}\n          input={input}\n          setInput={setInput}\n          createTodoAtIndex={createTodoAtIndex}\n        />\n      </div>\n      <form className=\"todoListSection\" name=\"todo-list\">\n        <h2>ðŸ“„Tasks</h2>\n        <TaskStatus todos={todos} />\n        <ul className=\"todoList\">\n          <ToDoItem\n            todos={todos}\n            setTodos={setTodos}\n            createTodoAtIndex={createTodoAtIndex}\n            handleTodoIsDeleted={handleTodoIsDeleted}\n            handleTodoIsChanged={handleTodoIsChanged}\n            handleTodoIsChecked={handleTodoIsChecked}\n            handleTodoIsImportant={handleTodoIsImportant}\n          />\n        </ul>\n      </form>\n      <ClearAllTodosButton \n        todos={todos}\n        setTodos={setTodos}\n      />\n    </main>\n  );\n}\n\nexport default Main;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n  return (\n    <footer className=\"Footer\">\n      <article className=\"howTo\">\n        <h3>How to use:</h3>\n        <li>Press 'enter' in any of the boxes to create a new to-do-item</li>\n        <li>Complete the item by checking the left circle</li>\n        <li>Mark an item as important by checking the '!'-icon</li>\n        <li>Delete an item by deleting its content or clicking the x-symbol on the right</li>\n        \n      </article>\n      <article className=\"credits\">\n        <h3>Credits</h3>\n        <p>Created with <a href=\"https://reactjs.org/\">React.js</a> ðŸ’¥</p>\n      </article>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header'\nimport Main from './components/Main/Main'\nimport Footer from './components/Footer/Footer'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}